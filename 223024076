1) import java.util.Scanner; // Importing the Scanner class for user input process

public class EvenOddChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object for reading the input

        System.out.print("Enter a number: "); // Asking the user to enter a number
        int number = scanner.nextInt(); // Reading the integer input entered by the user

        // Checking if the number is even or odd
        if (number % 2 == 0) {
            System.out.println(number + " is even."); // Output if the number is even
        } else {
            System.out.println(number + " is odd."); // Output if the number is odd
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


2)   import java.util.Scanner; // Importing the Scanner class for user input

public class GradeMessage {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object to read input

        System.out.print("Enter your grade (A, B, C, D, F): "); // Asking the user to enter a grade
        char grade = scanner.next().charAt(0); // Reading the first character of the input as the grade

        // Switch statement to determine the message based on the grade
        switch (grade) {
            case 'A':
                System.out.println("Excellent!"); // Message for grade A
                break;
            case 'B':
                System.out.println("Well done!"); // Message for grade B
                break;
            case 'C':
                System.out.println("Good job!"); // Message for grade C
                break;
            case 'D':
                System.out.println("You passed."); // Message for grade D
                break;
            case 'F':
                System.out.println("Better luck next time."); // Message for grade F
                break;
            default:
                System.out.println("Invalid grade entered."); // Message for invalid grade
                break;
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


3)  import java.util.Scanner; // Importing the Scanner class for user input

public class LeapYearChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object to read input

        System.out.print("Enter a year: "); // Asking the user to enter a year
        int year = scanner.nextInt(); // Reading the integer input for the year

        // Checking if the year is a leap year
        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
            System.out.println(year + " is a leap year."); // Output if the year is a leap year
        } else {
            System.out.println(year + " is not a leap year."); // Output if the year is not a leap year
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


4)  import java.util.Scanner; // Importing the Scanner class for user input

public class LargestNumberFinder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object to read input

        // Asking the user to enter three numbers
        System.out.print("Enter the first number: ");
        int num1 = scanner.nextInt(); // Reading the first number

        System.out.print("Enter the second number: ");
        int num2 = scanner.nextInt(); // Reading the second number

        System.out.print("Enter the third number: ");
        int num3 = scanner.nextInt(); // Reading the third number

        // Determining the largest number among the three
        if (num1 >= num2 && num1 >= num3) {
            System.out.println(num1 + " is the largest number."); // Output if num1 is largest
        } else if (num2 >= num1 && num2 >= num3) {
            System.out.println(num2 + " is the largest number."); // Output if num2 is largest
        } else {
            System.out.println(num3 + " is the largest number."); // Output if num3 is largest
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


5)  import java.util.Scanner; // Importing the Scanner class for user input

public class NumberChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object to read input

        System.out.print("Enter a number: "); // Asking the user to enter a number
        double number = scanner.nextDouble(); // Reading the number as a double

        // Checking if the number is positive, negative, or zero
        if (number > 0) {
            System.out.println(number + " is positive."); // Output if the number is positive
        } else if (number < 0) {
            System.out.println(number + " is negative."); // Output if the number is negative
        } else {
            System.out.println("The number is zero."); // Output if the number is zero
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


6) import java.util.Scanner; // Importing the Scanner class for user input

public class DiamondShape {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in); // Creating a Scanner object to read input

        System.out.println("Enter the number of rows for the diamond shape: "); // asking for the number of rows
        int rows = scanner.nextInt(); // Reading the number of rows

        // Printing the upper part of the diamond
        for (int i = 1; i <= rows; i++) {
            // Printing spaces for alignment
            for (int j = i; j < rows; j++) {
                System.out.print(" ");
            }
            // Printing stars for the diamond shape
            for (int j = 1; j <= (2 * i - 1); j++) {
                System.out.print("*");
            }
            System.out.println(); // Moving to the next line
        }

        // Printing the lower part of the diamond
        for (int i = rows - 1; i >= 1; i--) {
            // Printing spaces for alignment
            for (int j = rows; j > i; j--) {
                System.out.print(" ");
            }
            // Printing stars for the diamond shape
            for (int j = 1; j <= (2 * i - 1); j++) {
                System.out.print("*");
            }
            System.out.println(); // Moving to the next line
        }

        scanner.close(); // Closing the scanner to prevent resource leaks
    }
}


7)    public class AverageCalculator {
    public static void main(String[] args) {
        // Array of integers to calculate the average
        int[] numbers = {10, 12, 34, 23, 56, 78};

        int sum = 0; // Variable to hold the sum of the numbers
        // Looping through the array to calculate the sum
        for (int number : numbers) {
            sum += number; // Adding each number to the sum
        }

        // Calculating the average
        double average = (double) sum / numbers.length;

        // Displaying the average
        System.out.println("The average of the array elements is: " + average);
    }
}


8)    public class ArrayReversal {
    public static void main(String[] args) {
        // Input array to be reversed
        int[] numbers = {3, 4, 6, 1, 9, 7, 5, 8};

        int length = numbers.length; // Getting the length of the array

        // Creating a new array to hold the reversed elements
        int[] reversed = new int[length];

        // Looping through the original array in reverse order
        for (int i = 0; i < length; i++) {
            reversed[i] = numbers[length - 1 - i]; // Assigning reversed elements
        }

        // Output of the reversed array
        System.out.print("Reversed array: ");
        for (int num : reversed) {
            System.out.print(num + " "); // Printing each element of the reversed array
        }
    }
}


9)   public class LargestElementFinder {
    public static void main(String[] args) {
        // Input array of integers
        int[] numbers = {34, 23, 12, 45, 67, 89, 234, 26, 10, 30, 43};

        int largest = numbers[0]; // Initializing the largest variable with the first element

        // Looping through the array to find the largest element
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] > largest) {
                largest = numbers[i]; // Updating largest if a larger number is found
            }
        }

        // Outputting the largest element found in the array
        System.out.println("The largest element in the array is: " + largest);
    }
}
